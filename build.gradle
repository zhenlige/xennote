plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
	id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.fallenbreath.me/releases/" }
	maven { url "https://repo1.maven.org/maven2/" }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"xennote" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	accessWidenerPath = file("src/main/resources/xennote.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Cloth Config API
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Mod Menu
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"

	implementation "org.apache.commons:commons-math4-core:+"
	include "org.apache.commons:commons-math4-core:+"

	implementation "org.apache.commons:commons-numbers-primes:+"
	include "org.apache.commons:commons-numbers-primes:+"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "xennote"
    versionNumber = project.version // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "beta" // `release` or `beta` or `alpha`
    uploadFile = remapJar
    gameVersions = ["1.21.2", "1.21.3"] // Must be an array, even with only one version
    loaders = ["fabric", "quilt"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "fabric-api"
        required.project "cloth-config"
        // optional.version "sodium", "mc1.19.3-0.4.8" // Creates a new optional dependency on this specific version of Sodium
    }
}